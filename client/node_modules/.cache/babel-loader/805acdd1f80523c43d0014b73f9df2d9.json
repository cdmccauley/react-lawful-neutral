{"ast":null,"code":"import _classCallCheck from \"/home/user/Downloads/sync/github/react-lawful-neutral/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Downloads/sync/github/react-lawful-neutral/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Downloads/sync/github/react-lawful-neutral/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Downloads/sync/github/react-lawful-neutral/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Downloads/sync/github/react-lawful-neutral/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Downloads/sync/github/react-lawful-neutral/client/src/Room.js\";\nimport React, { Component } from 'react';\n\nvar Room =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Room, _Component);\n\n  function Room(props) {\n    var _this;\n\n    _classCallCheck(this, Room);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Room).call(this, props));\n    _this.state = {\n      roomId: _this.props.match.params.id,\n      clientPeerConn: null\n    };\n    return _this;\n  }\n\n  _createClass(Room, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // DEBUG: WebRTC testing\n      var servers = {\n        'iceServers': [{\n          'urls': 'stun:stun.services.mozilla.com'\n        }, {\n          'urls': 'stun:stun.l.google.com:19302'\n        }, {\n          'urls': 'turn:numb.viagenie.ca',\n          'credential': 'webrtc',\n          'username': 'cdmccauley@gmail.com'\n        }]\n      };\n      var tempClientPeerConn = new RTCPeerConnection(servers);\n\n      tempClientPeerConn.onicecandidate = function (event) {\n        return event.candidate ? console.log(event.candidate) : console.log(event);\n      };\n\n      console.log(tempClientPeerConn);\n      tempClientPeerConn.createOffer().then(function (offer) {\n        return console.log(offer);\n      }); // tempClientPeerConn.createAnswer().then(answer => console.log(answer)); // need have-remote-offer or have-local-pranswer\n      // END DEBUG: WebRTC testing\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Room \", this.state.roomId);\n    }\n  }]);\n\n  return Room;\n}(Component);\n\n;\nexport default Room;","map":{"version":3,"sources":["/home/user/Downloads/sync/github/react-lawful-neutral/client/src/Room.js"],"names":["React","Component","Room","props","state","roomId","match","params","id","clientPeerConn","servers","tempClientPeerConn","RTCPeerConnection","onicecandidate","event","candidate","console","log","createOffer","then","offer"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,I;;;;;AAEJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,MAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EADrB;AAEXC,MAAAA,cAAc,EAAE;AAFL,KAAb;AAFiB;AAMlB;;;;wCAEmB;AAClB;AACA,UAAIC,OAAO,GAAG;AAAC,sBAAc,CAAC;AAAC,kBAAQ;AAAT,SAAD,EAA6C;AAAC,kBAAQ;AAAT,SAA7C,EAAuF;AAAC,kBAAQ,uBAAT;AAAkC,wBAAc,QAAhD;AAA0D,sBAAY;AAAtE,SAAvF;AAAf,OAAd;AACA,UAAIC,kBAAkB,GAAG,IAAIC,iBAAJ,CAAsBF,OAAtB,CAAzB;;AACAC,MAAAA,kBAAkB,CAACE,cAAnB,GAAqC,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACC,SAAN,GAAkBC,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,SAAlB,CAAlB,GAAiDC,OAAO,CAACC,GAAR,CAAYH,KAAZ,CAArD;AAAA,OAA1C;;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYN,kBAAZ;AACAA,MAAAA,kBAAkB,CAACO,WAAnB,GAAiCC,IAAjC,CAAsC,UAAAC,KAAK;AAAA,eAAIJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,CAAJ;AAAA,OAA3C,EANkB,CAOlB;AACA;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,KAAKhB,KAAL,CAAWC,MAAtB,CADF;AAGD;;;;EAzBgBJ,S;;AA0BlB;AAED,eAAeC,IAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Room extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      roomId: this.props.match.params.id,\n      clientPeerConn: null,\n    };\n  };\n\n  componentDidMount() {\n    // DEBUG: WebRTC testing\n    let servers = {'iceServers': [{'urls': 'stun:stun.services.mozilla.com'}, {'urls': 'stun:stun.l.google.com:19302'}, {'urls': 'turn:numb.viagenie.ca', 'credential': 'webrtc', 'username': 'cdmccauley@gmail.com'}]};\n    let tempClientPeerConn = new RTCPeerConnection(servers);\n    tempClientPeerConn.onicecandidate = (event => event.candidate ? console.log(event.candidate) : console.log(event));\n    console.log(tempClientPeerConn);\n    tempClientPeerConn.createOffer().then(offer => console.log(offer));\n    // tempClientPeerConn.createAnswer().then(answer => console.log(answer)); // need have-remote-offer or have-local-pranswer\n    // END DEBUG: WebRTC testing\n  };\n\n  render() {\n    return(\n      <h2>Room { this.state.roomId }</h2>\n    );\n  };\n};\n\nexport default Room;"]},"metadata":{},"sourceType":"module"}