{"ast":null,"code":"import _regeneratorRuntime from \"/home/user/Downloads/sync/github/react-lawful-neutral/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/user/Downloads/sync/github/react-lawful-neutral/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/user/Downloads/sync/github/react-lawful-neutral/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Downloads/sync/github/react-lawful-neutral/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Downloads/sync/github/react-lawful-neutral/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Downloads/sync/github/react-lawful-neutral/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Downloads/sync/github/react-lawful-neutral/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/user/Downloads/sync/github/react-lawful-neutral/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/user/Downloads/sync/github/react-lawful-neutral/client/src/Host.js\";\nimport React, { Component } from 'react';\n\nvar Host =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Host, _Component);\n\n  function Host() {\n    var _this;\n\n    _classCallCheck(this, Host);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Host).call(this)); // init state\n\n    _this.getHostId =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/host');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              ;\n              console.log(body.hostId); // DEBUG: log response from server on client\n              // response can be returned\n\n              return _context.abrupt(\"return\", body.hostId.toString());\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.state = {\n      hostId: '...',\n      hostPeerConn: null\n    }; // bind contexts\n\n    _this.setHostId = _this.setHostId.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getHostId = _this.getHostId.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Host, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // DEBUG: WebRTC testing !!\n      var tempHostPeerConn = new RTCPeerConnection({\n        'iceServers': [{\n          'urls': 'stun:stun.l.google.com:19302'\n        }]\n      });\n      console.log(tempHostPeerConn);\n      tempHostPeerConn.createOffer().then(function (offer) {\n        return console.log(offer);\n      });\n      tempHostPeerConn.createAnswer().then(function (answer) {\n        return console.log(answer);\n      }); // DEBUG: end WebRTC testing !!\n      // set hostId\n\n      this.setHostId();\n    }\n  }, {\n    key: \"setHostId\",\n    value: function setHostId() {\n      var _this2 = this;\n\n      // call getHostId, set state.hostId with response or show errors\n      this.getHostId().then(function (res) {\n        return _this2.setState({\n          hostId: res\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Host \", this.state.hostId);\n    }\n  }]);\n\n  return Host;\n}(Component);\n\n;\nexport default Host;","map":{"version":3,"sources":["/home/user/Downloads/sync/github/react-lawful-neutral/client/src/Host.js"],"names":["React","Component","Host","getHostId","fetch","response","json","body","status","Error","message","console","log","hostId","toString","state","hostPeerConn","setHostId","bind","tempHostPeerConn","RTCPeerConnection","createOffer","then","offer","createAnswer","answer","res","setState","catch","err"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,I;;;;;AAEJ,kBAAc;AAAA;;AAAA;;AACZ,+EADY,CAEZ;;AAFY,UA+BdC,SA/Bc;AAAA;AAAA;AAAA;AAAA,6BA+BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEaC,KAAK,CAAC,WAAD,CAFlB;;AAAA;AAEJC,cAAAA,QAFI;AAAA;AAAA,qBAISA,QAAQ,CAACC,IAAT,EAJT;;AAAA;AAIJC,cAAAA,IAJI;;AAAA,oBAMNF,QAAQ,CAACG,MAAT,KAAoB,GANd;AAAA;AAAA;AAAA;;AAAA,oBAQFC,KAAK,CAACF,IAAI,CAACG,OAAN,CARH;;AAAA;AAST;AACDC,cAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,MAAjB,EAVU,CAUgB;AAC1B;;AAXU,+CAYHN,IAAI,CAACM,MAAL,CAAYC,QAAZ,EAZG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA/BE;AAGZ,UAAKC,KAAL,GAAa;AACXF,MAAAA,MAAM,EAAE,KADG;AAEXG,MAAAA,YAAY,EAAE;AAFH,KAAb,CAHY,CAOZ;;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,uDAAjB;AACA,UAAKf,SAAL,GAAiB,MAAKA,SAAL,CAAee,IAAf,uDAAjB;AATY;AAUb;;;;wCAEmB;AAClB;AACA,UAAIC,gBAAgB,GAAG,IAAIC,iBAAJ,CAAsB;AAAC,sBAAa,CAAC;AAAC,kBAAO;AAAR,SAAD;AAAd,OAAtB,CAAvB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYO,gBAAZ;AACAA,MAAAA,gBAAgB,CAACE,WAAjB,GAA+BC,IAA/B,CAAoC,UAAAC,KAAK;AAAA,eAAIZ,OAAO,CAACC,GAAR,CAAYW,KAAZ,CAAJ;AAAA,OAAzC;AACAJ,MAAAA,gBAAgB,CAACK,YAAjB,GAAgCF,IAAhC,CAAqC,UAAAG,MAAM;AAAA,eAAId,OAAO,CAACC,GAAR,CAAYa,MAAZ,CAAJ;AAAA,OAA3C,EALkB,CAMlB;AAEA;;AACA,WAAKR,SAAL;AACD;;;gCAEW;AAAA;;AACV;AACA,WAAKd,SAAL,GACCmB,IADD,CACM,UAAAI,GAAG;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEd,UAAAA,MAAM,EAAEa;AAAV,SAAd,CAAJ;AAAA,OADT,EAECE,KAFD,CAEO,UAAAC,GAAG;AAAA,eAAIlB,OAAO,CAACC,GAAR,CAAYiB,GAAZ,CAAJ;AAAA,OAFV;AAGD;;;6BAiBQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,KAAKd,KAAL,CAAWF,MAAtB,CADF;AAGD;;;;EApDgBZ,S;;AAsDlB;AAED,eAAeC,IAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Host extends Component {\n\n  constructor() {\n    super();\n    // init state\n    this.state = {\n      hostId: '...',\n      hostPeerConn: null,\n    };\n    // bind contexts\n    this.setHostId = this.setHostId.bind(this);\n    this.getHostId = this.getHostId.bind(this);\n  }\n\n  componentDidMount() {\n    // DEBUG: WebRTC testing !!\n    let tempHostPeerConn = new RTCPeerConnection({'iceServers':[{'urls':'stun:stun.l.google.com:19302'}]});\n    console.log(tempHostPeerConn);\n    tempHostPeerConn.createOffer().then(offer => console.log(offer));\n    tempHostPeerConn.createAnswer().then(answer => console.log(answer));\n    // DEBUG: end WebRTC testing !!\n\n    // set hostId\n    this.setHostId();\n  };\n\n  setHostId() {\n    // call getHostId, set state.hostId with response or show errors\n    this.getHostId()\n    .then(res => this.setState({ hostId: res }))\n    .catch(err => console.log(err));\n  };\n\n  getHostId = async () => {\n    // call server for hostId\n    const response = await fetch('/api/host');\n    // store response from server\n    const body = await response.json();\n    // check for errors\n    if (response.status !== 200) {\n      // something went wrong\n      throw Error(body.message);\n    };\n    console.log(body.hostId); // DEBUG: log response from server on client\n    // response can be returned\n    return body.hostId.toString();\n  };\n\n  render() {\n    return (\n      <h2>Host { this.state.hostId }</h2>\n    );\n  };\n\n};\n\nexport default Host;"]},"metadata":{},"sourceType":"module"}